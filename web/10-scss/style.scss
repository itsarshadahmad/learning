// modules -> importing from other files
@use "base.scss";

// Predefined SCSS library
@use "sass:math";

// It can also create partial files which can used or imported to other module to
// to be used. It can be define in _partials.scss and imported using
// @use "partial.scss"; underscore gets ignore its for us to understand file
// written as partial.

//run: sass --watch input.scss output.css

// Nesting
.container {
	.heading {
		color: crimson;
		text-align: center;
	}

	.intro-list li {
		list-style: none;
		text-transform: uppercase;
	}
}

// Variables
// $font-stack: Helvetica, sans-serif;
// $primary-color: #333;

// body {
// 	font: 100% $font-stack;
// 	color: $primary-color;
// }

// Mixins -> acts like function to keep code DRY
@mixin theme($theme: DarkGray) {
	background: $theme;
	box-shadow: 0 0 1px rgba($theme, .25);
	color: #fff;
}

.info {
	@include theme;
}

.alert {
	@include theme($theme: DarkRed);
}

.success {
	@include theme($theme: DarkGreen);
}

// Extend/Inheritance
// using % will allow you to inherit blocks behaviour
%message-shared {
	border: 1px solid #ccc;
	padding: 10px;
	color: #333;
}

// This CSS won't print because %equal-heights is never extended.
%equal-heights {
	display: flex;
	flex-wrap: wrap;
}

.message {
	@extend %message-shared;
}

.success {
	@extend %message-shared;
	border-color: green;
}

.error {
	@extend %message-shared;
	border-color: red;
}

.warning {
	@extend %message-shared;
	border-color: yellow;
}

// Operator -> Can perform arithmetic operations
.container {
	display: flex;
	flex-direction: column;
}

article[role="main"] {
	width: math.div(600px, 960px) * 100%;
}

aside[role="complementary"] {
	width: math.div(300px, 960px) * 100%;
	margin-left: auto;
}